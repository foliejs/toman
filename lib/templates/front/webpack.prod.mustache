const path = require("path")
const webpack = require("webpack")
const webpackMerge = require("webpack-merge")
const ExtractTextPlugin = require("extract-text-webpack-plugin")
const ChunkManifestPlugin = require("chunk-manifest-webpack-plugin")
const WebpackChunkHash = require("webpack-chunk-hash")

const commonConfig = require('./webpack.common')

module.exports = (env) => webpackMerge(commonConfig, {

  bail: true,

  entry: {
    index: "./index",
    common: "./common"
  },

  output: {
    path: path.resolve(__dirname, "../dist"),
    filename: "[name].[chunkhash:8].js",
    chunkFilename: "[name].[chunkhash:8].js",
    publicPath: "/"
  },

  module: {
    rules: [
      {
        test: /\.css$/,
        loader: ExtractTextPlugin.extract({
          loader: [
            "css-loader",
            "postcss-loader"
          ]
        })
      },
      {
        test: /\.styl$/,
        loader: ExtractTextPlugin.extract({
          loader: [
            "css-loader",
            "postcss-loader",
            "stylus-loader"
          ]
        })
      }
    ]
  },

  plugins: [
    new ExtractTextPlugin("[name].[chunkhash:8].css"),

    new webpack.optimize.CommonsChunkPlugin({
      name: ["common", "manifest"],
      minChunks: Infinity,
    }),

    new ChunkManifestPlugin({
      filename: "chunk-manifest.json",
      manifestVariable: "webpackManifest"
    }),

    new webpack.HashedModuleIdsPlugin(),

    new WebpackChunkHash(),

    new webpack.optimize.UglifyJsPlugin({
      compress: {
        dead_code: true,
        warnings: false
      },
      sourceMap: false
    }),

    new webpack.DefinePlugin({
      "FILE_HOST": env && env.ci ? '"http://striker.project.ci"' : '"https://striker.teambition.net"',
      "API_HOST": env && env.ci ? '"http://project.ci"' : '"https://www.teambition.com"'
    })
  ]

})
